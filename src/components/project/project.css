.block {
    width: 100%;
    margin: auto;
    padding: var(--gap) 0;
    display: grid;
    grid-template: max-content / minmax(min-content, 1fr) minmax(min-content, 2fr);
    grid-template-areas: 'description preview'
        'controle preview';
    grid-column-gap: calc(2 * var(--gap));
}

.content {
    display: none;
    grid-area: description;

    @media (--min-lg) {
        width: 100%;
        display: flex;
        flex-direction: column;
        justify-content: center;
        color: var(--navigation-color);
    }
}

.title,
.description {
    margin-bottom: var(--gap);
    position: relative;
    z-index: 0;

    &::before {
        position: absolute;
        top: 4px;
        left: 4px;
        z-index: -1;
        content: attr(data-title);
        color: var(--curtain-color);
        transform: translate(calc((var(--float-x) - 50vw) / 100), calc((var(--float-y) - 50vh) / 100));
        transition: var(--float-transition);
    }
}

.title {
    font-size: 2rem;
}

.description {
    max-width: 50ch;
    font-size: 1.2rem;
}

.tools {
    --velocity: 150;
    display: none;

    @media (--min-lg) {
        margin-top: var(--gap);
        padding: calc(0.5 * var(--gap));
        display: flex;
        align-self: center;
        transform: translate3d(calc((-1 * var(--float-x) + 50vw) / var(--velocity)), calc((-1 * var(--float-y) + 50vh) / var(--velocity)), 0);
        will-change: transform;
        transition: var(--float-transition);
    }
}

.tool {
    display: inline-block;
    position: relative;

    &:focus,
    &:hover {

        .caption {
            opacity: 1;
            visibility: visible;
            transition: all var(--transition-duration) var(--ease-in-out-quad);
        }
    }

    + .tool {
        margin-left: var(--gap);
    }
}

.figure {
    min-width: 60px;
    text-align: center;
}

.caption {
    margin-top: var(--gap);
    position: absolute;
    top: 100%;
    left: 50%;
    opacity: 0;
    visibility: hidden;
    color: var(--color-gray);
    font-size: 0.9em;
    transform: translateX(-50%);
    transition: all 0.2s var(--ease-in-out-quad);
}

.image {
    width: 32px;
    height: 32px;
    opacity: 0.25;
    transition: opacity var(--transition-duration) var(--ease-in-out-expo);

    &:focus,
    &:hover {
        opacity: 0.5;
    }
}
